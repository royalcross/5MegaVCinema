<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.vCinema.mapper.AdminMapper">
<!-- 동적 SQL 기능 활용하여 SQL 구문을 다르게 구성 가능 
	FROM 절 이후의 검색타입과 검색어에 따른 WHERE절을 다르게 구성
	
	[동적 SQL문]
	- 어떤 조건에 따라 실행할 SQL 문장을 다르게 구성한 SQL 구문
	- JSTL에서 조건에 따라 문장을 다르게 실행하는 것과 거의 동일
		<c:if>, <c:choose><c:when><c:otherwise> => c: 제거하면 거의 동일
		
	조건1) 검색어(searchKeyword)가 널스트링이 아닐 때 WHERE 절 추가 => if 태그 필요
	조건2) 검색어가 있을 경우 WHERE 절 뒷 부분에 검색타입(searchType)에 따라 컬럼명 다르게 검색
			=> 복수개의 조건에 따른 동적 SQL 문을 작성하기 위해 choose, when, otherwise 태그 필요
			
	=> 결론> 테이블명, LIKE 절 등에 전달되는 데이터는 ${} 사용하고
	외부로부터 입력받는 대부분의 데이터는 #{} 사용하자!
	=> 결론2> LIKE절에 % 결합 시 CONCAT() 함수 활용하자

 -->
<!--  1. 검색어(searchKeyword)가 널스트리잉 아닐 때 검색어를 추가하기 위한 WHERE 절 추가
=> 검색어 데이터는 searchKeyword 변수에 저장되어 있으므로 변수명 그대로 활용
=> 자바 문법과 동일하게 equals() 메서드를 통해 문자열 비교 수행 -->






       <!--  * * * * * * * * * * *       영화        * * * * * * * * * * *-->	
	   <!-- ///////////////////////////////////////////////////////////// -->
	   
	<!-- 영화 목록 총 개수 -->
	<select id="selectMovieListCount" resultType="int">
		SELECT COUNT(*)
		FROM movie
		<if test="!searchKeyword.equals('')">
			WHERE 
			movie_code LIKE CONCAT('%', #{searchKeyword}, '%')
			OR movie_name_kr LIKE CONCAT('%', #{searchKeyword}, '%')
			OR movie_name_en LIKE CONCAT('%', #{searchKeyword}, '%')
			OR movie_director LIKE CONCAT('%', #{searchKeyword}, '%')
			OR movie_cast LIKE CONCAT('%', #{searchKeyword}, '%')
			OR movie_genre LIKE CONCAT('%', #{searchKeyword}, '%')
			OR movie_release_date LIKE CONCAT('%', #{searchKeyword}, '%')
			OR movie_close_date LIKE CONCAT('%', #{searchKeyword}, '%')
			OR movie_running_time LIKE CONCAT('%', #{searchKeyword}, '%')
			OR movie_content LIKE CONCAT('%', #{searchKeyword}, '%')
			OR movie_grade LIKE CONCAT('%', #{searchKeyword}, '%')
			OR movie_poster LIKE CONCAT('%', #{searchKeyword}, '%')
			OR movie_preview LIKE CONCAT('%', #{searchKeyword}, '%')
			OR movie_photo LIKE CONCAT('%', #{searchKeyword}, '%')
			OR movie_status LIKE CONCAT('%', #{searchKeyword}, '%')
		</if>
	</select>
	
	<!-- 영화 목록 조회 -->		
	<select id="selectMovieList" resultType="movie">
			SELECT *
			FROM movie
			<if test="!searchKeyword.equals('')">
				WHERE 
				movie_code LIKE CONCAT('%', #{searchKeyword}, '%')
				OR movie_name_kr LIKE CONCAT('%', #{searchKeyword}, '%')
				OR movie_name_en LIKE CONCAT('%', #{searchKeyword}, '%')
				OR movie_director LIKE CONCAT('%', #{searchKeyword}, '%')
				OR movie_cast LIKE CONCAT('%', #{searchKeyword}, '%')
				OR movie_genre LIKE CONCAT('%', #{searchKeyword}, '%')
				OR movie_release_date LIKE CONCAT('%', #{searchKeyword}, '%')
				OR movie_close_date LIKE CONCAT('%', #{searchKeyword}, '%')
				OR movie_running_time LIKE CONCAT('%', #{searchKeyword}, '%')
				OR movie_content LIKE CONCAT('%', #{searchKeyword}, '%')
				OR movie_grade LIKE CONCAT('%', #{searchKeyword}, '%')
				OR movie_poster LIKE CONCAT('%', #{searchKeyword}, '%')
				OR movie_preview LIKE CONCAT('%', #{searchKeyword}, '%')
				OR movie_photo LIKE CONCAT('%', #{searchKeyword}, '%')
				OR movie_status LIKE CONCAT('%', #{searchKeyword}, '%')
			</if>
			
			ORDER BY
				movie_release_date ASC
			LIMIT
				#{startRow}     -- Mapper 내의 메서드에서 @Param("startRow") 로 지정한 파라미터명 사용
				, #{listLimit}  -- Mapper 내의 메서드에서 @Param("listLimit") 로 지정한 파라미터명 사용
		</select>
		
	<!-- 영화 등록 -->	
	<insert id="insertMovie">
	INSERT
		INTO movie
		VALUES (
		#{movie_code}
		, #{movie_name_kr}
		, #{movie_name_en}
		, #{movie_director}
		, #{movie_cast}
		, #{movie_genre}
		, #{movie_release_date}
		, #{movie_close_date}
		, #{movie_running_time}
		, #{movie_content}
		, #{movie_grade}
		, #{movie_poster}
		, #{movie_preview}
		, #{movie_photo}
		, #{movie_status}
		)
	</insert>
	
	<!--   영화 상세 정보   -->		
	<select id="selectmovieDetail">
		SELECT *
		FROM movie
		WHERE movie_code = #{movie_code}
	
	</select>
	
    <!--   영화 삭제   -->
	<delete id="deleteMovie">
		DELETE FROM movie
		WHERE movie_code = #{movie_code}
	</delete>
		
		
		
		
		
		
       <!--  * * * * * * * * * * *       영화관        * * * * * * * * * * *-->	
 	   <!-- ///////////////////////////////////////////////////////////// -->      
       
       
       
       
       
       
       <!--   영화관 목록 총 개수   -->	
	<select id="selectTheaterListCount" resultType="int">
	SELECT COUNT(*)
		FROM theater
		<if test="!searchKeyword.equals('')">
			WHERE 
			theater_num LIKE CONCAT('%', #{searchKeyword}, '%')
			OR theater_name LIKE CONCAT('%', #{searchKeyword}, '%')
			OR theater_location_num LIKE CONCAT('%', #{searchKeyword}, '%')
			OR theater_location LIKE CONCAT('%', #{searchKeyword}, '%')
			OR theater_content LIKE CONCAT('%', #{searchKeyword}, '%')
			OR theater_post_code LIKE CONCAT('%', #{searchKeyword}, '%')
			OR theater_address LIKE CONCAT('%', #{searchKeyword}, '%')
			OR theater_address_detail LIKE CONCAT('%', #{searchKeyword}, '%')
		</if>
	</select>	
	
    <!--   영화관 목록 조회   -->	
	<select id="selectTheaterList" resultType="theater">
		SELECT *
		FROM theater
			<if test="!searchKeyword.equals('')">
				WHERE 
			theater_num LIKE CONCAT('%', #{searchKeyword}, '%')
			OR theater_name LIKE CONCAT('%', #{searchKeyword}, '%')
			OR theater_location_num LIKE CONCAT('%', #{searchKeyword}, '%')
			OR theater_location LIKE CONCAT('%', #{searchKeyword}, '%')
			OR theater_content LIKE CONCAT('%', #{searchKeyword}, '%')
			OR theater_post_code LIKE CONCAT('%', #{searchKeyword}, '%')
			OR theater_address LIKE CONCAT('%', #{searchKeyword}, '%')
			OR theater_address_detail LIKE CONCAT('%', #{searchKeyword}, '%')
			</if>
			
	<!-- 		ORDER BY -->
	<!-- 			movie_release_date ASC -->
			LIMIT
				#{startRow}     -- Mapper 내의 메서드에서 @Param("startRow") 로 지정한 파라미터명 사용
				, #{listLimit}  -- Mapper 내의 메서드에서 @Param("listLimit") 로 지정한 파라미터명 사용
	</select>
	
    <!--   영화관 등록   -->
	<insert id="insertTheater">
		INSERT INTO theater
		VALUES (
		IFNULL(#{theater_num},0)
		IFNULL(#{theater_name},'')
		, IFNULL(#{theater_location_num},0)
		, IFNULL(#{theater_location},'') 
		, IFNULL(#{theater_content},'') 
		, IFNULL(#{theater_post_code},0) 
		, IFNULL(#{theater_address},'') 
		, IFNULL(#{theater_address_detail},'') 
		)
	</insert>
	
	 <!--   최대 영화관 번호 조회   -->
	<select id="selectTheaterMaxNum" resultType="int">
		SELECT MAX(theater_num)
		FROM theater	
	</select>
	
	
	
	<!--  * * * * * * * * * * *      상영시간표        * * * * * * * * * * *-->	
	   <!-- ///////////////////////////////////////////////////////////// -->	
	
	
	
    <!--   상영시간표 목록 총 개수   -->	
	<select id="selectPlayListCount" resultType="int">
		SELECT COUNT(*)
		FROM movie m JOIN play p
		ON m.movie_code = p.play_movie_code
		JOIN theater t
		ON p.play_theater_num = t.theater_num
		JOIN room r
		ON p.play_room_num = r.room_num
	</select>
	
    <!--   상영시간표 목록 조회   -->		
<!-- 	<select id="selectPlayList" resultType="hashmap"> -->
<!-- 		SELECT p.play_num, p.play_date, CONCAT(date_format(m.movie_release_date, "%y-%m-%d"), '~', date_format(m.movie_close_date, "%y-%m-%d")) AS movie_date, -->
<!-- 		t.theater_name -->
<!-- 		, r.room_num -->
<!-- 		, p.play_movie_name_kr -->
<!-- 		, p.play_start_time -->
<!-- 		, p.play_end_time -->
<!-- 		FROM movie m JOIN play p -->
<!-- 		ON m.movie_code = p.play_movie_code -->
<!-- 		JOIN theater t -->
<!-- 		ON p.play_theater_num = t.theater_num -->
<!-- 		JOIN room r -->
<!-- 		ON p.play_room_num = r.room_num -->
<!--         where r.room_theater_num = theater_num -->
			
<!-- 	</select> -->
	<select id="selectPlayList" resultType="hashmap">
		SELECT *
		FROM movie m JOIN play p
		ON m.movie_code = p.play_movie_code
		JOIN theater t
		ON p.play_theater_num = t.theater_num
		JOIN room r
		ON p.play_room_num = r.room_num
        where r.room_theater_num = theater_num
			
	</select>
	
	
    <!--   상영시간표 목록 조회 2  -->			
	<select id="selectMovieList2" resultType="movie">
	<![CDATA[
		SELECT *
		FROM movie
		where now() < movie_close_date AND now() > movie_release_date
		 ]]> 
	</select>

	
    <!--   상영종료시간 구하기  -->		
	<select id="selectMovieEndTime" resultType="int">
		SELECT movie_running_time
		FROM movie
		WHERE movie_name_kr = #{play_movie_name_kr}
	</select>
	
		<!-- 상영시간표 등록 -->	
	<insert id="insertPlay">
		INSERT INTO play
		(play_num,
		play_movie_code,
		play_theater_num,
		play_room_num,
		play_start_time,
		play_end_time,
		play_movie_name_kr,
		play_theater_name,
		play_day
		)
		VALUES (
			null
			, #{play_movie_code}	
			, #{play_theater_num}	
			, #{play_room_num}	
			, #{play_start_time}	
			, #{play_end_time}	
			, #{play_movie_name_kr}	
			, #{play_theater_name}	
			, #{play_day}	
		)
	</insert>
	
	<!--  영화코드 구하기 -->
	<select id="selectMovieCode">
		SELECT movie_code
		FROM movie
		WHERE movie_name_kr = #{play_movie_name_kr}
	</select>
	
	<!-- 상영시간표 상세 정보 가져오기 -->
	<select id="selectPlay" resultType="hashmap">
		SELECT *
		FROM movie m JOIN play p
		ON m.movie_code = p.play_movie_code
		JOIN theater t
		ON p.play_theater_num = t.theater_num
		JOIN room r
		ON p.play_room_num = r.room_num
        where r.room_theater_num = theater_num and
        p.play_num = #{play_num}
	</select>
	
		<!-- 상영시작시간 가져오기 -->
	<select id="selectPlayStartTime" resultType="String">
		SELECT p.play_start_time
		FROM movie m JOIN play p
		ON m.movie_code = p.play_movie_code
		JOIN theater t
		ON p.play_theater_num = t.theater_num
		JOIN room r
		ON p.play_room_num = r.room_num
        where r.room_theater_num = theater_num and
        p.play_movie_name_kr = #{play_movie_name_kr}
	</select>
	
		<!-- 영화이름 가져오기 -->
<!-- 	<select id="selectPlayMovieName" resultType="String"> -->
<!-- 		SELECT p.play_movie_name_kr -->
<!-- 		FROM movie m JOIN play p -->
<!-- 		ON m.movie_code = p.play_movie_code -->
<!-- 		JOIN theater t -->
<!-- 		ON p.play_theater_num = t.theater_num -->
<!-- 		JOIN room r -->
<!-- 		ON p.play_room_num = r.room_num -->
<!--         where r.room_theater_num = theater_num and -->
<!--         p.play_movie_name_kr = #{play_movie_name_kr} -->
<!-- 	</select> -->
	
	<!-- 상영시간표 수정 -->
	<update id="updatePlay">
		UPDATE play
		SET 
			play_day = #{play_day}
			, play_theater_name = #{play_theater_name}
			, play_theater_num = #{play_theater_num}
			, play_room_num = #{play_room_num}
			, play_end_time = #{play_end_time}
			, play_start_time = #{play_start_time}
		WHERE 
			play_num = #{play_num}
	</update>	
	
	
	
	
	
	
	
	
<!--  * * * * * * * * * * *       상영관        * * * * * * * * * * *-->	
	   <!-- ///////////////////////////////////////////////////////////// -->	

	
	<!--  상영관 목록 -->
	<select id="selectRoomList" resultType="hashmap">
		SELECT t.theater_name, r.room_theater_num, r.room_num, r.room_seats, t.theater_location_num
		FROM room r join theater t
		on r.room_theater_num = t.theater_num
	<if test="!searchKeyword.equals('')">
		WHERE 
		theater_name LIKE CONCAT('%', #{searchKeyword}, '%')
		OR room_theater_num LIKE CONCAT('%', #{searchKeyword}, '%')
		OR room_num LIKE CONCAT('%', #{searchKeyword}, '%')
		OR room_seats LIKE CONCAT('%', #{searchKeyword}, '%')
		OR theater_location_num LIKE CONCAT('%', #{searchKeyword}, '%')
	</if>
	</select>
	
	<!--  상영관 삭제 -->
	<delete id="deleteRoom">
	<![CDATA[
		DELETE FROM room
		WHERE room_num = #{room_num} && room_theater_num = #{room_theater_num}
		 ]]>
	</delete>
	
		<!-- 상영관 등록 -->
	<insert id="insertRoom">
		INSERT INTO room
		VALUES (
			#{room_num}
			, #{room_seats}	
			, #{room_theater_num}	
		)
	</insert>
	
	<!-- 상영관 상세정보 가져오기 -->
	<select id="selectRoom" resultType="hashmap">
		SELECT t.theater_location, t.theater_name, r.room_theater_num, r.room_num, r.room_seats
		FROM room r join theater t
		on r.room_theater_num = t.theater_num
		WHERE r.room_num = #{room_num} and r.room_theater_num = #{room_theater_num}
	</select>
	
		<!-- 상영관 수정 -->
<!-- 	<update id="updateRoom"> -->
<!-- 		UPDATE room -->
<!-- 		SET  -->
<!-- 			item_name = #{item_name} -->
<!-- 			, item_content = #{item_content} -->
<!-- 			, item_price = #{item_price} -->
<!-- 		WHERE  -->
<!-- 			item_id = #{item_id} -->
<!-- 	</update> -->

	
	<!--  상영관 목록 개수 -->
	<select id="selectRoomListCount" resultType="int">
		SELECT count(*)
		FROM room
	<if test="!searchKeyword.equals('')">
		WHERE 
		theater_num LIKE CONCAT('%', #{searchKeyword}, '%')
		OR theater_name LIKE CONCAT('%', #{searchKeyword}, '%')
		OR theater_location_num LIKE CONCAT('%', #{searchKeyword}, '%')
		OR theater_location LIKE CONCAT('%', #{searchKeyword}, '%')
		OR theater_content LIKE CONCAT('%', #{searchKeyword}, '%')
		OR theater_post_code LIKE CONCAT('%', #{searchKeyword}, '%')
		OR theater_address LIKE CONCAT('%', #{searchKeyword}, '%')
		OR theater_address_detail LIKE CONCAT('%', #{searchKeyword}, '%')
	</if>
	</select>

	
	
	
</mapper>