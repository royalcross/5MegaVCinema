<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.vCinema.mapper.MemberMapper">
	<!-- 회원가입 insert -->
	<insert id="insertMember">
		INSERT 
		INTO member
		VALUES (
			null
			, #{member_id}
			, #{preference_theater}      
			, #{member_pw}
			, #{member_name}
			, #{member_birth}
			, #{member_phonenumber}
			, '활동'
			, 0     -- 동의하면 1, 동의 안하면 0
			, '회원'
			, now()
			, 0    -- 관리자면 1, 일반 회원이면 0
		)
	</insert>
	
	<!-- mybatis-config.xml 에 typeAlias 설정 MemberVO => member -->
	<select id="selectMember" resultType="member">
		select *
		from member
		where member_id = #{member_id}
	</select>
	
	<!--  회원 정보 수정 -->
	<update id="updateMember">
		UPDATE member
		SET
			preference_theater = #{preference_theater}      
			, member_pw = #{member_pw}
		WHERE
			member_id = #{member_id}
			
	</update>
	
	<!--  회원 탈퇴 -->
	<update id="updateWithdrawMember">
		UPDATE member
		SET
			member_status = '탈퇴'
		WHERE
			member_id = #{member_id}
	</update>
	
	<!-- 회원 아이디 찾기 -->
	<select id="selectMemberSearchId" resultType="member">
		SELECT *
		FROM member
		WHERE 
			member_name = #{member_name} 
			AND member_birth = #{member_birth}
			AND member_phonenumber = #{member_phonenumber}
	</select>
	
	<select id="selectMember_num" resultType="int">
		SELECT member_num
		FROM member
		WHERE member_id = #{id}
	
	</select>
	
	
	
	<select id="selectOrderticket2"  resultType="hashmap">
		SELECT 
			o.order_ticket_id
			, o.order_ticket_member_num
			, v.movie_name_kr
			, o.order_ticket_date
			, t.theater_name
			, o.order_ticket_seat_num
			, o.order_ticket_how_many_people
			, tk.ticket_price
			, o.order_ticket_status
			, o.order_ticket_room_num
		FROM order_ticket o 
		JOIN theater t 
		ON o.order_ticket_theater_num = t.theater_num 
		JOIN movie v 
		ON o.order_ticket_movie_code = v.movie_code 
		JOIN ticket tk
		ON o.order_ticket_type = tk.ticket_num 
		WHERE order_ticket_member_num = #{member_num}
	</select>
	
	<select id="selectPaymentInfo" resultType="orderItem">
		SELECT * 
		FROM order_item
		WHERE order_item_num = (SELECT MAX(order_item_num) -- 제일 최근 구매정보가 상품 구매번호가 가장 크므로
								FROM order_item)           -- 이를 기준으로 상품 구매정보 조회
	</select>
	
	<select id="selectItem2" resultType="store">
		SELECT * 
		FROM item
		WHERE item_id = #{item_id}
	</select>
	
	
</mapper>